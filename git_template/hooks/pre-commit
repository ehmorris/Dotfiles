#!/usr/bin/env ruby

# This pre-commit hook will prevent any commits to forbidden branches
# It will also help prevent you leaving debuggers and merge conflig flags
# Put this file in your local repo, in the .git/hooks folder
# and make sure it is executable by running: chmod u+x pre-commit
# The name of the file *must* be "pre-commit" for Git to pick it up.

error_found = false
FORBIDDEN_BRANCHES = ["master", "staging", "production"]
FORBIDDEN_CODE = [
  /TMP_DEBUG/, # My TextExpander macros for embedding debug code always include this for easy scanning.
  />>>>>>/,    # Git conflict markers
  /<<<<<</,    # ''
  /======/,    # ''
  /console\.debug/,  # JavaScript debug code that would break IE.
  /console\.log/,    # ''
  /binding\.pry/,        # pry debugging code
  /binding\.remote_pry/, # ''
  /save_and_open_page/,  # Launchy debugging code
  /debugger/,            # Ruby debugging code
  /focus:\s*true/
]


branch = `git rev-parse --abbrev-ref=strict HEAD`.chomp

if FORBIDDEN_BRANCHES.include?(branch)
  puts
  puts " HOLD UP!"
  puts " You are trying to commit directly to *#{branch}* branch."
  puts " (>_<)"
  error_found = true
end

full_diff = `git diff --cached --`
full_diff.scan(%r{^\+\+\+ b/(.+)\n@@.*\n([\s\S]*?)(?:^diff|\z)}).each do |file, diff|
  added = diff.split("\n").select { |x| x.start_with?("+") }.join("\n")
  # Scan for "forbidden" calls
  FORBIDDEN_CODE.each do |re|
    if added.match(re)
      puts %{Error: git pre-commit hook forbids committing lines with "#{$1 || $&}" to #{file}\n--------------}
      error_found = true
    end
  end
end

if error_found
  puts
  puts " You can force the commit by adding --no-verify to the command."
  puts
  exit 1
end
